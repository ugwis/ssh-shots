name: Go

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:

  build-release:
    name: Build & Release package
    runs-on: ubuntu-latest
    strategy:
      matrix:
        os: [mac64, lin64, win64]
        include:
        - os: mac64
          goos: darwin
          arch: amd64
        - os: lin64
          goos: linux
          arch: amd64
        - os: win64
          goos: windows
          arch: amd64
    steps:
    - name: Set up Go
      uses: actions/setup-go@v2
      with:
        go-version: 1.15

    - uses: actions/checkout@v2

    - name: Get dependencies
      run: go get -v -t -d ./...

    - name: Build
      env:
        goos: ${{ matrix.goos }}
        goarch: ${{ matrix.arch }}
      run: |
        mkdir dist
        cp test.txt dist/
        GOOS=$goos GOARCH=$goarch go build -v -o dist/shots .
        zip -j -r release dist
    - name: Download artifact to get url to upload to release
      uses: actions/download-artifact@v1
      with:
        name: artifact

    - name: Get url to upload to release from artifact
      id: get_url
      run: |
        url=$(cat artifact/url.txt)
        echo "##[set-output name=upload_url;]$url"
    - name: Upload release asset
      uses: actions/upload-release-asset@v1.0.1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.get_url.outputs.upload_url }}
        asset_path: release.zip
        asset_name: release-${{ matrix.os }}.zip
        asset_content_type: application/zip
